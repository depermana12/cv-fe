/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as VerifyEmailTokenImport } from './routes/verify-email.$token'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthSigninImport } from './routes/auth/signin'
import { Route as DashboardTrackerRouteImport } from './routes/dashboard/tracker/route'
import { Route as DashboardTemplatesRouteImport } from './routes/dashboard/templates/route'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard/settings/route'
import { Route as DashboardProfileRouteImport } from './routes/dashboard/profile/route'
import { Route as DashboardCvRouteImport } from './routes/dashboard/cv/route'
import { Route as DashboardOverviewIndexImport } from './routes/dashboard/overview/index'
import { Route as DashboardCvViewImport } from './routes/dashboard/cv/view'
import { Route as DashboardCvCreateImport } from './routes/dashboard/cv/create'
import { Route as DashboardCvIdImport } from './routes/dashboard/cv/$id'
import { Route as DashboardCvIdEditImport } from './routes/dashboard/cv/$id.edit'

// Create/Update Routes

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const VerifyEmailTokenRoute = VerifyEmailTokenImport.update({
  id: '/verify-email/$token',
  path: '/verify-email/$token',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRouteRoute,
} as any)

const DashboardTrackerRouteRoute = DashboardTrackerRouteImport.update({
  id: '/tracker',
  path: '/tracker',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardTemplatesRouteRoute = DashboardTemplatesRouteImport.update({
  id: '/templates',
  path: '/templates',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardSettingsRouteRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProfileRouteRoute = DashboardProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardCvRouteRoute = DashboardCvRouteImport.update({
  id: '/cv',
  path: '/cv',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardOverviewIndexRoute = DashboardOverviewIndexImport.update({
  id: '/overview/',
  path: '/overview/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardCvViewRoute = DashboardCvViewImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => DashboardCvRouteRoute,
} as any)

const DashboardCvCreateRoute = DashboardCvCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => DashboardCvRouteRoute,
} as any)

const DashboardCvIdRoute = DashboardCvIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => DashboardCvRouteRoute,
} as any)

const DashboardCvIdEditRoute = DashboardCvIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => DashboardCvIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/cv': {
      id: '/dashboard/cv'
      path: '/cv'
      fullPath: '/dashboard/cv'
      preLoaderRoute: typeof DashboardCvRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/profile': {
      id: '/dashboard/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/templates': {
      id: '/dashboard/templates'
      path: '/templates'
      fullPath: '/dashboard/templates'
      preLoaderRoute: typeof DashboardTemplatesRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/tracker': {
      id: '/dashboard/tracker'
      path: '/tracker'
      fullPath: '/dashboard/tracker'
      preLoaderRoute: typeof DashboardTrackerRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthRouteImport
    }
    '/verify-email/$token': {
      id: '/verify-email/$token'
      path: '/verify-email/$token'
      fullPath: '/verify-email/$token'
      preLoaderRoute: typeof VerifyEmailTokenImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/cv/$id': {
      id: '/dashboard/cv/$id'
      path: '/$id'
      fullPath: '/dashboard/cv/$id'
      preLoaderRoute: typeof DashboardCvIdImport
      parentRoute: typeof DashboardCvRouteImport
    }
    '/dashboard/cv/create': {
      id: '/dashboard/cv/create'
      path: '/create'
      fullPath: '/dashboard/cv/create'
      preLoaderRoute: typeof DashboardCvCreateImport
      parentRoute: typeof DashboardCvRouteImport
    }
    '/dashboard/cv/view': {
      id: '/dashboard/cv/view'
      path: '/view'
      fullPath: '/dashboard/cv/view'
      preLoaderRoute: typeof DashboardCvViewImport
      parentRoute: typeof DashboardCvRouteImport
    }
    '/dashboard/overview/': {
      id: '/dashboard/overview/'
      path: '/overview'
      fullPath: '/dashboard/overview'
      preLoaderRoute: typeof DashboardOverviewIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/cv/$id/edit': {
      id: '/dashboard/cv/$id/edit'
      path: '/edit'
      fullPath: '/dashboard/cv/$id/edit'
      preLoaderRoute: typeof DashboardCvIdEditImport
      parentRoute: typeof DashboardCvIdImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardCvIdRouteChildren {
  DashboardCvIdEditRoute: typeof DashboardCvIdEditRoute
}

const DashboardCvIdRouteChildren: DashboardCvIdRouteChildren = {
  DashboardCvIdEditRoute: DashboardCvIdEditRoute,
}

const DashboardCvIdRouteWithChildren = DashboardCvIdRoute._addFileChildren(
  DashboardCvIdRouteChildren,
)

interface DashboardCvRouteRouteChildren {
  DashboardCvIdRoute: typeof DashboardCvIdRouteWithChildren
  DashboardCvCreateRoute: typeof DashboardCvCreateRoute
  DashboardCvViewRoute: typeof DashboardCvViewRoute
}

const DashboardCvRouteRouteChildren: DashboardCvRouteRouteChildren = {
  DashboardCvIdRoute: DashboardCvIdRouteWithChildren,
  DashboardCvCreateRoute: DashboardCvCreateRoute,
  DashboardCvViewRoute: DashboardCvViewRoute,
}

const DashboardCvRouteRouteWithChildren =
  DashboardCvRouteRoute._addFileChildren(DashboardCvRouteRouteChildren)

interface DashboardRouteRouteChildren {
  DashboardCvRouteRoute: typeof DashboardCvRouteRouteWithChildren
  DashboardProfileRouteRoute: typeof DashboardProfileRouteRoute
  DashboardSettingsRouteRoute: typeof DashboardSettingsRouteRoute
  DashboardTemplatesRouteRoute: typeof DashboardTemplatesRouteRoute
  DashboardTrackerRouteRoute: typeof DashboardTrackerRouteRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardOverviewIndexRoute: typeof DashboardOverviewIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardCvRouteRoute: DashboardCvRouteRouteWithChildren,
  DashboardProfileRouteRoute: DashboardProfileRouteRoute,
  DashboardSettingsRouteRoute: DashboardSettingsRouteRoute,
  DashboardTemplatesRouteRoute: DashboardTemplatesRouteRoute,
  DashboardTrackerRouteRoute: DashboardTrackerRouteRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardOverviewIndexRoute: DashboardOverviewIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/cv': typeof DashboardCvRouteRouteWithChildren
  '/dashboard/profile': typeof DashboardProfileRouteRoute
  '/dashboard/settings': typeof DashboardSettingsRouteRoute
  '/dashboard/templates': typeof DashboardTemplatesRouteRoute
  '/dashboard/tracker': typeof DashboardTrackerRouteRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/verify-email/$token': typeof VerifyEmailTokenRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/cv/$id': typeof DashboardCvIdRouteWithChildren
  '/dashboard/cv/create': typeof DashboardCvCreateRoute
  '/dashboard/cv/view': typeof DashboardCvViewRoute
  '/dashboard/overview': typeof DashboardOverviewIndexRoute
  '/dashboard/cv/$id/edit': typeof DashboardCvIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard/cv': typeof DashboardCvRouteRouteWithChildren
  '/dashboard/profile': typeof DashboardProfileRouteRoute
  '/dashboard/settings': typeof DashboardSettingsRouteRoute
  '/dashboard/templates': typeof DashboardTemplatesRouteRoute
  '/dashboard/tracker': typeof DashboardTrackerRouteRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/verify-email/$token': typeof VerifyEmailTokenRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/cv/$id': typeof DashboardCvIdRouteWithChildren
  '/dashboard/cv/create': typeof DashboardCvCreateRoute
  '/dashboard/cv/view': typeof DashboardCvViewRoute
  '/dashboard/overview': typeof DashboardOverviewIndexRoute
  '/dashboard/cv/$id/edit': typeof DashboardCvIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/cv': typeof DashboardCvRouteRouteWithChildren
  '/dashboard/profile': typeof DashboardProfileRouteRoute
  '/dashboard/settings': typeof DashboardSettingsRouteRoute
  '/dashboard/templates': typeof DashboardTemplatesRouteRoute
  '/dashboard/tracker': typeof DashboardTrackerRouteRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/verify-email/$token': typeof VerifyEmailTokenRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/cv/$id': typeof DashboardCvIdRouteWithChildren
  '/dashboard/cv/create': typeof DashboardCvCreateRoute
  '/dashboard/cv/view': typeof DashboardCvViewRoute
  '/dashboard/overview/': typeof DashboardOverviewIndexRoute
  '/dashboard/cv/$id/edit': typeof DashboardCvIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/dashboard'
    | '/dashboard/cv'
    | '/dashboard/profile'
    | '/dashboard/settings'
    | '/dashboard/templates'
    | '/dashboard/tracker'
    | '/auth/signin'
    | '/auth/signup'
    | '/verify-email/$token'
    | '/dashboard/'
    | '/dashboard/cv/$id'
    | '/dashboard/cv/create'
    | '/dashboard/cv/view'
    | '/dashboard/overview'
    | '/dashboard/cv/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/dashboard/cv'
    | '/dashboard/profile'
    | '/dashboard/settings'
    | '/dashboard/templates'
    | '/dashboard/tracker'
    | '/auth/signin'
    | '/auth/signup'
    | '/verify-email/$token'
    | '/dashboard'
    | '/dashboard/cv/$id'
    | '/dashboard/cv/create'
    | '/dashboard/cv/view'
    | '/dashboard/overview'
    | '/dashboard/cv/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/dashboard'
    | '/dashboard/cv'
    | '/dashboard/profile'
    | '/dashboard/settings'
    | '/dashboard/templates'
    | '/dashboard/tracker'
    | '/auth/signin'
    | '/auth/signup'
    | '/verify-email/$token'
    | '/dashboard/'
    | '/dashboard/cv/$id'
    | '/dashboard/cv/create'
    | '/dashboard/cv/view'
    | '/dashboard/overview/'
    | '/dashboard/cv/$id/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  VerifyEmailTokenRoute: typeof VerifyEmailTokenRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  VerifyEmailTokenRoute: VerifyEmailTokenRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/dashboard",
        "/verify-email/$token"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/signin",
        "/auth/signup"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/cv",
        "/dashboard/profile",
        "/dashboard/settings",
        "/dashboard/templates",
        "/dashboard/tracker",
        "/dashboard/",
        "/dashboard/overview/"
      ]
    },
    "/dashboard/cv": {
      "filePath": "dashboard/cv/route.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/cv/$id",
        "/dashboard/cv/create",
        "/dashboard/cv/view"
      ]
    },
    "/dashboard/profile": {
      "filePath": "dashboard/profile/route.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings": {
      "filePath": "dashboard/settings/route.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/templates": {
      "filePath": "dashboard/templates/route.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/tracker": {
      "filePath": "dashboard/tracker/route.tsx",
      "parent": "/dashboard"
    },
    "/auth/signin": {
      "filePath": "auth/signin.tsx",
      "parent": "/auth"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx",
      "parent": "/auth"
    },
    "/verify-email/$token": {
      "filePath": "verify-email.$token.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/cv/$id": {
      "filePath": "dashboard/cv/$id.tsx",
      "parent": "/dashboard/cv",
      "children": [
        "/dashboard/cv/$id/edit"
      ]
    },
    "/dashboard/cv/create": {
      "filePath": "dashboard/cv/create.tsx",
      "parent": "/dashboard/cv"
    },
    "/dashboard/cv/view": {
      "filePath": "dashboard/cv/view.tsx",
      "parent": "/dashboard/cv"
    },
    "/dashboard/overview/": {
      "filePath": "dashboard/overview/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/cv/$id/edit": {
      "filePath": "dashboard/cv/$id.edit.tsx",
      "parent": "/dashboard/cv/$id"
    }
  }
}
ROUTE_MANIFEST_END */
